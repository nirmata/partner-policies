apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: check-existing-service-account
  annotations:
    policies.kyverno.io/title: Validate Service Accounts in AuthorizationPolicy
    policies.kyverno.io/category: Istio Best Practices
    policies.kyverno.io/severity: medium
    policies.kyverno.io/subject: AuthorizationPolicy
    policies.kyverno.io/description: >-
      This policy ensures that any ServiceAccount referenced in an AuthorizationPolicy 
      actually exists within the cluster. This prevents misconfigurations that could lead to 
      authorization policies referencing non-existent service accounts.
spec:
  validationFailureAction: Enforce
  rules:
    - name: check-existing-service-account
      match:
        any:
          - resources:
              kinds:
                - AuthorizationPolicy
              operations:
                - CREATE
                - UPDATE
      context:
        - name: manifestPrincipals
          variable:
            jmesPath: "request.object.spec.rules[].from[].source.principals[] | [?starts_with(@, 'cluster.local/ns/') && contains(@, '/sa/')]" 
        - name: existingServiceAccounts
          apiCall:
            urlPath: "/api/v1/serviceaccounts"
            jmesPath: "items[].metadata.name"
      validate:
        message: "The ServiceAccount(s) referenced in this AuthorizationPolicy do not exist: {{ manifestPrincipals }}. existing service-accounts : {{ existingServiceAccounts }}"
        foreach:
          - list: manifestPrincipals
            deny:
              conditions:
                all:
                  - key: "{{ split(element, '/')[4] }}"
                    operator: AnyNotIn
                    value: "{{ existingServiceAccounts }}"
